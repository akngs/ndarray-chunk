{"version":3,"sources":["ndarray-chunk.min.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","chunk","array","shape","_ndarrayPack2","length","Error","rank","remainder","nChunk","Math","floor","chunks","Array","i","hi","min","lo","remainder0","remainder1","nChunk0","nChunk1","j","Object","defineProperty","value","undefined","_ndarrayPack","ndarray","do_convert","arr","result","sz","push","Float64Array","compare1st","a","b","order","stride","terms","abs","sort","compileConstructor","dtype","dimension","className","join","useGetters","code","procedure","Function","CACHED_CONSTRUCTORS","indices","iota","args","map","index_str","shapeArg","strideArg","a_vars","c_vars","tShape","tStride","n","idx","arrayDType","data","isBuffer","hasTypedArrays","prototype","toString","isArray","wrappedNDArrayCtor","offset","ctor","d","ctor_list","float32","float64","int8","int16","int32","uint8","uint16","uint32","uint8_clamped","buffer","generic","_isBuffer","constructor","pre","body","thisVars","localVars","name","lvalue","rvalue","count","post","funcName","blockSize","Procedure","argTypes","shimArgs","arrayArgs","arrayBlockIndices","scalarArgs","offsetArgs","offsetArgIndex","indexArgs","shapeArgs","debug","compileCwise","user_args","proc","proc_args","slice","arg_type","blockIndices","printCode","createThunk","vars","thunkName","typesig","string_typesig","max","shapeLengthConditions","shapeConditions","console","log","thunk","compile","bind","innerFill","nargs","has_index","pidx","outerFill","matched","indexStr","countMatches","orders","processBlock","block","dtypes","carg","re","RegExp","ptrStr","arrNum","indexOf","offArgIndex","offArg","localStr","arrStr","replace","reStrArr","ptrStrArr","trim","typeSummary","summary","allEqual","t","digits","match","charAt","generateCWiseOp","blockBegin","blockEnd","loopBegin","loopEnd","loopOrders","newOrder","arglist","zeros","off_arg","init_string","uniq","concat","loopName","f","unique_pred","list","compare","ptr","len","unique_eq","unique","sorted"],"mappings":"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","file":"ndarray-chunk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chunk\"] = factory();\n\telse\n\t\troot[\"chunk\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.chunk = undefined;\n\t\n\tvar _ndarrayPack = __webpack_require__(1);\n\t\n\tvar _ndarrayPack2 = _interopRequireDefault(_ndarrayPack);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction chunk(array, shape) {\n\t  array = array.shape ? array : (0, _ndarrayPack2.default)(array);\n\t\n\t  if (array.shape.length !== shape.length) throw new Error('Shape mismatch');\n\t\n\t  var rank = shape.length;\n\t  if (rank === 1) {\n\t    var remainder = array.shape[0] % shape[0];\n\t    var nChunk = Math.floor(array.shape[0] / shape[0]) + !!remainder;\n\t    var chunks = new Array(nChunk);\n\t    for (var i = 0; i < nChunk; ++i) {\n\t      chunks[i] = array.hi(Math.min(i * shape[0] + shape[0], array.shape[0])).lo(i * shape[0]);\n\t    }\n\t    return chunks;\n\t  } else if (rank === 2) {\n\t    var remainder0 = array.shape[0] % shape[0];\n\t    var remainder1 = array.shape[1] % shape[1];\n\t    var nChunk0 = Math.floor(array.shape[0] / shape[0]) + !!remainder0;\n\t    var nChunk1 = Math.floor(array.shape[1] / shape[1]) + !!remainder1;\n\t    var chunks = new Array(nChunk0);\n\t    for (var i = 0; i < nChunk0; ++i) {\n\t      chunks[i] = new Array(nChunk1);\n\t      for (var j = 0; j < nChunk1; ++j) {\n\t        chunks[i][j] = array.hi(Math.min(i * shape[0] + shape[0], array.shape[0]), Math.min(j * shape[1] + shape[1], array.shape[1])).lo(i * shape[0], j * shape[1]);\n\t      }\n\t    }\n\t    return chunks;\n\t  } else {\n\t    throw new Error('Unsupported rank');\n\t  }\n\t}\n\t\n\texports.chunk = chunk;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\n\t\n\tvar ndarray = __webpack_require__(2)\n\tvar do_convert = __webpack_require__(5)\n\t\n\tmodule.exports = function convert(arr, result) {\n\t  var shape = [], c = arr, sz = 1\n\t  while(c instanceof Array) {\n\t    shape.push(c.length)\n\t    sz *= c.length\n\t    c = c[0]\n\t  }\n\t  if(shape.length === 0) {\n\t    return ndarray()\n\t  }\n\t  if(!result) {\n\t    result = ndarray(new Float64Array(sz), shape)\n\t  }\n\t  do_convert(result, arr)\n\t  return result\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar iota = __webpack_require__(3)\n\tvar isBuffer = __webpack_require__(4)\n\t\n\tvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\t\n\tfunction compare1st(a, b) {\n\t  return a[0] - b[0]\n\t}\n\t\n\tfunction order() {\n\t  var stride = this.stride\n\t  var terms = new Array(stride.length)\n\t  var i\n\t  for(i=0; i<terms.length; ++i) {\n\t    terms[i] = [Math.abs(stride[i]), i]\n\t  }\n\t  terms.sort(compare1st)\n\t  var result = new Array(terms.length)\n\t  for(i=0; i<result.length; ++i) {\n\t    result[i] = terms[i][1]\n\t  }\n\t  return result\n\t}\n\t\n\tfunction compileConstructor(dtype, dimension) {\n\t  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n\t  if(dimension < 0) {\n\t    className = \"View_Nil\" + dtype\n\t  }\n\t  var useGetters = (dtype === \"generic\")\n\t\n\t  if(dimension === -1) {\n\t    //Special case for trivial arrays\n\t    var code =\n\t      \"function \"+className+\"(a){this.data=a;};\\\n\tvar proto=\"+className+\".prototype;\\\n\tproto.dtype='\"+dtype+\"';\\\n\tproto.index=function(){return -1};\\\n\tproto.size=0;\\\n\tproto.dimension=-1;\\\n\tproto.shape=proto.stride=proto.order=[];\\\n\tproto.lo=proto.hi=proto.transpose=proto.step=\\\n\tfunction(){return new \"+className+\"(this.data);};\\\n\tproto.get=proto.set=function(){};\\\n\tproto.pick=function(){return null};\\\n\treturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n\t    var procedure = new Function(code)\n\t    return procedure()\n\t  } else if(dimension === 0) {\n\t    //Special case for 0d arrays\n\t    var code =\n\t      \"function \"+className+\"(a,d) {\\\n\tthis.data = a;\\\n\tthis.offset = d\\\n\t};\\\n\tvar proto=\"+className+\".prototype;\\\n\tproto.dtype='\"+dtype+\"';\\\n\tproto.index=function(){return this.offset};\\\n\tproto.dimension=0;\\\n\tproto.size=1;\\\n\tproto.shape=\\\n\tproto.stride=\\\n\tproto.order=[];\\\n\tproto.lo=\\\n\tproto.hi=\\\n\tproto.transpose=\\\n\tproto.step=function \"+className+\"_copy() {\\\n\treturn new \"+className+\"(this.data,this.offset)\\\n\t};\\\n\tproto.pick=function \"+className+\"_pick(){\\\n\treturn TrivialArray(this.data);\\\n\t};\\\n\tproto.valueOf=proto.get=function \"+className+\"_get(){\\\n\treturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\t\"};\\\n\tproto.set=function \"+className+\"_set(v){\\\n\treturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n\t};\\\n\treturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n\t    var procedure = new Function(\"TrivialArray\", code)\n\t    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n\t  }\n\t\n\t  var code = [\"'use strict'\"]\n\t\n\t  //Create constructor for view\n\t  var indices = iota(dimension)\n\t  var args = indices.map(function(i) { return \"i\"+i })\n\t  var index_str = \"this.offset+\" + indices.map(function(i) {\n\t        return \"this.stride[\" + i + \"]*i\" + i\n\t      }).join(\"+\")\n\t  var shapeArg = indices.map(function(i) {\n\t      return \"b\"+i\n\t    }).join(\",\")\n\t  var strideArg = indices.map(function(i) {\n\t      return \"c\"+i\n\t    }).join(\",\")\n\t  code.push(\n\t    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n\t      \"this.shape=[\" + shapeArg + \"]\",\n\t      \"this.stride=[\" + strideArg + \"]\",\n\t      \"this.offset=d|0}\",\n\t    \"var proto=\"+className+\".prototype\",\n\t    \"proto.dtype='\"+dtype+\"'\",\n\t    \"proto.dimension=\"+dimension)\n\t\n\t  //view.size:\n\t  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\n\treturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\t\"}})\")\n\t\n\t  //view.order:\n\t  if(dimension === 1) {\n\t    code.push(\"proto.order=[0]\")\n\t  } else {\n\t    code.push(\"Object.defineProperty(proto,'order',{get:\")\n\t    if(dimension < 4) {\n\t      code.push(\"function \"+className+\"_order(){\")\n\t      if(dimension === 2) {\n\t        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n\t      } else if(dimension === 3) {\n\t        code.push(\n\t\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\n\tif(s0>s1){\\\n\tif(s1>s2){\\\n\treturn [2,1,0];\\\n\t}else if(s0>s2){\\\n\treturn [1,2,0];\\\n\t}else{\\\n\treturn [1,0,2];\\\n\t}\\\n\t}else if(s0>s2){\\\n\treturn [2,0,1];\\\n\t}else if(s2>s1){\\\n\treturn [0,1,2];\\\n\t}else{\\\n\treturn [0,2,1];\\\n\t}}})\")\n\t      }\n\t    } else {\n\t      code.push(\"ORDER})\")\n\t    }\n\t  }\n\t\n\t  //view.set(i0, ..., v):\n\t  code.push(\n\t\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n\t  if(useGetters) {\n\t    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n\t  } else {\n\t    code.push(\"return this.data[\"+index_str+\"]=v}\")\n\t  }\n\t\n\t  //view.get(i0, ...):\n\t  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n\t  if(useGetters) {\n\t    code.push(\"return this.data.get(\"+index_str+\")}\")\n\t  } else {\n\t    code.push(\"return this.data[\"+index_str+\"]}\")\n\t  }\n\t\n\t  //view.index:\n\t  code.push(\n\t    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\t\n\t  //view.hi():\n\t  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n\t    indices.map(function(i) {\n\t      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"this.stride[\"+i + \"]\"\n\t    }).join(\",\")+\",this.offset)}\")\n\t\n\t  //view.lo():\n\t  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n\t  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n\t  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n\t  for(var i=0; i<dimension; ++i) {\n\t    code.push(\n\t\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\n\td=i\"+i+\"|0;\\\n\tb+=c\"+i+\"*d;\\\n\ta\"+i+\"-=d}\")\n\t  }\n\t  code.push(\"return new \"+className+\"(this.data,\"+\n\t    indices.map(function(i) {\n\t      return \"a\"+i\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"c\"+i\n\t    }).join(\",\")+\",b)}\")\n\t\n\t  //view.step():\n\t  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n\t    indices.map(function(i) {\n\t      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n\t    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n\t  for(var i=0; i<dimension; ++i) {\n\t    code.push(\n\t\"if(typeof i\"+i+\"==='number'){\\\n\td=i\"+i+\"|0;\\\n\tif(d<0){\\\n\tc+=b\"+i+\"*(a\"+i+\"-1);\\\n\ta\"+i+\"=ceil(-a\"+i+\"/d)\\\n\t}else{\\\n\ta\"+i+\"=ceil(a\"+i+\"/d)\\\n\t}\\\n\tb\"+i+\"*=d\\\n\t}\")\n\t  }\n\t  code.push(\"return new \"+className+\"(this.data,\"+\n\t    indices.map(function(i) {\n\t      return \"a\" + i\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"b\" + i\n\t    }).join(\",\")+\",c)}\")\n\t\n\t  //view.transpose():\n\t  var tShape = new Array(dimension)\n\t  var tStride = new Array(dimension)\n\t  for(var i=0; i<dimension; ++i) {\n\t    tShape[i] = \"a[i\"+i+\"]\"\n\t    tStride[i] = \"b[i\"+i+\"]\"\n\t  }\n\t  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n\t    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n\t    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\t\n\t  //view.pick():\n\t  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n\t  for(var i=0; i<dimension; ++i) {\n\t    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n\t  }\n\t  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\t\n\t  //Add return statement\n\t  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n\t    indices.map(function(i) {\n\t      return \"shape[\"+i+\"]\"\n\t    }).join(\",\")+\",\"+\n\t    indices.map(function(i) {\n\t      return \"stride[\"+i+\"]\"\n\t    }).join(\",\")+\",offset)}\")\n\t\n\t  //Compile procedure\n\t  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n\t  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n\t}\n\t\n\tfunction arrayDType(data) {\n\t  if(isBuffer(data)) {\n\t    return \"buffer\"\n\t  }\n\t  if(hasTypedArrays) {\n\t    switch(Object.prototype.toString.call(data)) {\n\t      case \"[object Float64Array]\":\n\t        return \"float64\"\n\t      case \"[object Float32Array]\":\n\t        return \"float32\"\n\t      case \"[object Int8Array]\":\n\t        return \"int8\"\n\t      case \"[object Int16Array]\":\n\t        return \"int16\"\n\t      case \"[object Int32Array]\":\n\t        return \"int32\"\n\t      case \"[object Uint8Array]\":\n\t        return \"uint8\"\n\t      case \"[object Uint16Array]\":\n\t        return \"uint16\"\n\t      case \"[object Uint32Array]\":\n\t        return \"uint32\"\n\t      case \"[object Uint8ClampedArray]\":\n\t        return \"uint8_clamped\"\n\t    }\n\t  }\n\t  if(Array.isArray(data)) {\n\t    return \"array\"\n\t  }\n\t  return \"generic\"\n\t}\n\t\n\tvar CACHED_CONSTRUCTORS = {\n\t  \"float32\":[],\n\t  \"float64\":[],\n\t  \"int8\":[],\n\t  \"int16\":[],\n\t  \"int32\":[],\n\t  \"uint8\":[],\n\t  \"uint16\":[],\n\t  \"uint32\":[],\n\t  \"array\":[],\n\t  \"uint8_clamped\":[],\n\t  \"buffer\":[],\n\t  \"generic\":[]\n\t}\n\t\n\t;(function() {\n\t  for(var id in CACHED_CONSTRUCTORS) {\n\t    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n\t  }\n\t});\n\t\n\tfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n\t  if(data === undefined) {\n\t    var ctor = CACHED_CONSTRUCTORS.array[0]\n\t    return ctor([])\n\t  } else if(typeof data === \"number\") {\n\t    data = [data]\n\t  }\n\t  if(shape === undefined) {\n\t    shape = [ data.length ]\n\t  }\n\t  var d = shape.length\n\t  if(stride === undefined) {\n\t    stride = new Array(d)\n\t    for(var i=d-1, sz=1; i>=0; --i) {\n\t      stride[i] = sz\n\t      sz *= shape[i]\n\t    }\n\t  }\n\t  if(offset === undefined) {\n\t    offset = 0\n\t    for(var i=0; i<d; ++i) {\n\t      if(stride[i] < 0) {\n\t        offset -= (shape[i]-1)*stride[i]\n\t      }\n\t    }\n\t  }\n\t  var dtype = arrayDType(data)\n\t  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n\t  while(ctor_list.length <= d+1) {\n\t    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n\t  }\n\t  var ctor = ctor_list[d+1]\n\t  return ctor(data, shape, stride, offset)\n\t}\n\t\n\tmodule.exports = wrappedNDArrayCtor\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\"\n\t\n\tfunction iota(n) {\n\t  var result = new Array(n)\n\t  for(var i=0; i<n; ++i) {\n\t    result[i] = i\n\t  }\n\t  return result\n\t}\n\t\n\tmodule.exports = iota\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Determine if an object is Buffer\n\t *\n\t * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * License:  MIT\n\t *\n\t * `npm install is-buffer`\n\t */\n\t\n\tmodule.exports = function (obj) {\n\t  return !!(obj != null &&\n\t    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)\n\t      (obj.constructor &&\n\t      typeof obj.constructor.isBuffer === 'function' &&\n\t      obj.constructor.isBuffer(obj))\n\t    ))\n\t}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports=__webpack_require__(6)({\"args\":[\"array\",\"scalar\",\"index\"],\"pre\":{\"body\":\"{}\",\"args\":[],\"thisVars\":[],\"localVars\":[]},\"body\":{\"body\":\"{\\nvar _inline_1_v=_inline_1_arg1_,_inline_1_i\\nfor(_inline_1_i=0;_inline_1_i<_inline_1_arg2_.length-1;++_inline_1_i) {\\n_inline_1_v=_inline_1_v[_inline_1_arg2_[_inline_1_i]]\\n}\\n_inline_1_arg0_=_inline_1_v[_inline_1_arg2_[_inline_1_arg2_.length-1]]\\n}\",\"args\":[{\"name\":\"_inline_1_arg0_\",\"lvalue\":true,\"rvalue\":false,\"count\":1},{\"name\":\"_inline_1_arg1_\",\"lvalue\":false,\"rvalue\":true,\"count\":1},{\"name\":\"_inline_1_arg2_\",\"lvalue\":false,\"rvalue\":true,\"count\":4}],\"thisVars\":[],\"localVars\":[\"_inline_1_i\",\"_inline_1_v\"]},\"post\":{\"body\":\"{}\",\"args\":[],\"thisVars\":[],\"localVars\":[]},\"funcName\":\"convert\",\"blockSize\":64})\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\r\n\t\r\n\tvar createThunk = __webpack_require__(7)\r\n\t\r\n\tfunction Procedure() {\r\n\t  this.argTypes = []\r\n\t  this.shimArgs = []\r\n\t  this.arrayArgs = []\r\n\t  this.arrayBlockIndices = []\r\n\t  this.scalarArgs = []\r\n\t  this.offsetArgs = []\r\n\t  this.offsetArgIndex = []\r\n\t  this.indexArgs = []\r\n\t  this.shapeArgs = []\r\n\t  this.funcName = \"\"\r\n\t  this.pre = null\r\n\t  this.body = null\r\n\t  this.post = null\r\n\t  this.debug = false\r\n\t}\r\n\t\r\n\tfunction compileCwise(user_args) {\r\n\t  //Create procedure\r\n\t  var proc = new Procedure()\r\n\t  \r\n\t  //Parse blocks\r\n\t  proc.pre    = user_args.pre\r\n\t  proc.body   = user_args.body\r\n\t  proc.post   = user_args.post\r\n\t\r\n\t  //Parse arguments\r\n\t  var proc_args = user_args.args.slice(0)\r\n\t  proc.argTypes = proc_args\r\n\t  for(var i=0; i<proc_args.length; ++i) {\r\n\t    var arg_type = proc_args[i]\r\n\t    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\r\n\t      proc.argTypes[i] = \"array\"\r\n\t      proc.arrayArgs.push(i)\r\n\t      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\r\n\t      proc.shimArgs.push(\"array\" + i)\r\n\t      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\r\n\t        throw new Error(\"cwise: pre() block may not reference array args\")\r\n\t      }\r\n\t      if(i < proc.post.args.length && proc.post.args[i].count>0) {\r\n\t        throw new Error(\"cwise: post() block may not reference array args\")\r\n\t      }\r\n\t    } else if(arg_type === \"scalar\") {\r\n\t      proc.scalarArgs.push(i)\r\n\t      proc.shimArgs.push(\"scalar\" + i)\r\n\t    } else if(arg_type === \"index\") {\r\n\t      proc.indexArgs.push(i)\r\n\t      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\r\n\t        throw new Error(\"cwise: pre() block may not reference array index\")\r\n\t      }\r\n\t      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\r\n\t        throw new Error(\"cwise: body() block may not write to array index\")\r\n\t      }\r\n\t      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\r\n\t        throw new Error(\"cwise: post() block may not reference array index\")\r\n\t      }\r\n\t    } else if(arg_type === \"shape\") {\r\n\t      proc.shapeArgs.push(i)\r\n\t      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\r\n\t        throw new Error(\"cwise: pre() block may not write to array shape\")\r\n\t      }\r\n\t      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\r\n\t        throw new Error(\"cwise: body() block may not write to array shape\")\r\n\t      }\r\n\t      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\r\n\t        throw new Error(\"cwise: post() block may not write to array shape\")\r\n\t      }\r\n\t    } else if(typeof arg_type === \"object\" && arg_type.offset) {\r\n\t      proc.argTypes[i] = \"offset\"\r\n\t      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\r\n\t      proc.offsetArgIndex.push(i)\r\n\t    } else {\r\n\t      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\r\n\t    }\r\n\t  }\r\n\t  \r\n\t  //Make sure at least one array argument was specified\r\n\t  if(proc.arrayArgs.length <= 0) {\r\n\t    throw new Error(\"cwise: No array arguments specified\")\r\n\t  }\r\n\t  \r\n\t  //Make sure arguments are correct\r\n\t  if(proc.pre.args.length > proc_args.length) {\r\n\t    throw new Error(\"cwise: Too many arguments in pre() block\")\r\n\t  }\r\n\t  if(proc.body.args.length > proc_args.length) {\r\n\t    throw new Error(\"cwise: Too many arguments in body() block\")\r\n\t  }\r\n\t  if(proc.post.args.length > proc_args.length) {\r\n\t    throw new Error(\"cwise: Too many arguments in post() block\")\r\n\t  }\r\n\t\r\n\t  //Check debug flag\r\n\t  proc.debug = !!user_args.printCode || !!user_args.debug\r\n\t  \r\n\t  //Retrieve name\r\n\t  proc.funcName = user_args.funcName || \"cwise\"\r\n\t  \r\n\t  //Read in block size\r\n\t  proc.blockSize = user_args.blockSize || 64\r\n\t\r\n\t  return createThunk(proc)\r\n\t}\r\n\t\r\n\tmodule.exports = compileCwise\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\r\n\t\r\n\t// The function below is called when constructing a cwise function object, and does the following:\r\n\t// A function object is constructed which accepts as argument a compilation function and returns another function.\r\n\t// It is this other function that is eventually returned by createThunk, and this function is the one that actually\r\n\t// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\r\n\t// The compilation passed to the first function object is used for compiling new functions.\r\n\t// Once this function object is created, it is called with compile as argument, where the first argument of compile\r\n\t// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\r\n\t// So createThunk roughly works like this:\r\n\t// function createThunk(proc) {\r\n\t//   var thunk = function(compileBound) {\r\n\t//     var CACHED = {}\r\n\t//     return function(arrays and scalars) {\r\n\t//       if (dtype and order of arrays in CACHED) {\r\n\t//         var func = CACHED[dtype and order of arrays]\r\n\t//       } else {\r\n\t//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\r\n\t//       }\r\n\t//       return func(arrays and scalars)\r\n\t//     }\r\n\t//   }\r\n\t//   return thunk(compile.bind1(proc))\r\n\t// }\r\n\t\r\n\tvar compile = __webpack_require__(8)\r\n\t\r\n\tfunction createThunk(proc) {\r\n\t  var code = [\"'use strict'\", \"var CACHED={}\"]\r\n\t  var vars = []\r\n\t  var thunkName = proc.funcName + \"_cwise_thunk\"\r\n\t  \r\n\t  //Build thunk\r\n\t  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\r\n\t  var typesig = []\r\n\t  var string_typesig = []\r\n\t  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\r\n\t                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\r\n\t  var shapeLengthConditions = [], shapeConditions = []\r\n\t  // Process array arguments\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    var j = proc.arrayArgs[i]\r\n\t    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\r\n\t               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\r\n\t    typesig.push(\"t\" + j)\r\n\t    typesig.push(\"r\" + j)\r\n\t    string_typesig.push(\"t\"+j)\r\n\t    string_typesig.push(\"r\"+j+\".join()\")\r\n\t    proc_args.push(\"array\" + j + \".data\")\r\n\t    proc_args.push(\"array\" + j + \".stride\")\r\n\t    proc_args.push(\"array\" + j + \".offset|0\")\r\n\t    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\r\n\t      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\r\n\t      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\r\n\t    }\r\n\t  }\r\n\t  // Check for shape equality\r\n\t  if (proc.arrayArgs.length > 1) {\r\n\t    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\r\n\t    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\r\n\t    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\r\n\t    code.push(\"}\")\r\n\t  }\r\n\t  // Process scalar arguments\r\n\t  for(var i=0; i<proc.scalarArgs.length; ++i) {\r\n\t    proc_args.push(\"scalar\" + proc.scalarArgs[i])\r\n\t  }\r\n\t  // Check for cached function (and if not present, generate it)\r\n\t  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\r\n\t  vars.push(\"proc=CACHED[type]\")\r\n\t  code.push(\"var \" + vars.join(\",\"))\r\n\t  \r\n\t  code.push([\"if(!proc){\",\r\n\t             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\r\n\t             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\r\n\t\r\n\t  if(proc.debug) {\r\n\t    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\r\n\t  }\r\n\t  \r\n\t  //Compile thunk\r\n\t  var thunk = new Function(\"compile\", code.join(\"\\n\"))\r\n\t  return thunk(compile.bind(undefined, proc))\r\n\t}\r\n\t\r\n\tmodule.exports = createThunk\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\r\n\t\r\n\tvar uniq = __webpack_require__(9)\r\n\t\r\n\t// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)\r\n\t// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of \"pointers\" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.\r\n\tfunction innerFill(order, proc, body) {\r\n\t  var dimension = order.length\r\n\t    , nargs = proc.arrayArgs.length\r\n\t    , has_index = proc.indexArgs.length>0\r\n\t    , code = []\r\n\t    , vars = []\r\n\t    , idx=0, pidx=0, i, j\r\n\t  for(i=0; i<dimension; ++i) { // Iteration variables\r\n\t    vars.push([\"i\",i,\"=0\"].join(\"\"))\r\n\t  }\r\n\t  //Compute scan deltas\r\n\t  for(j=0; j<nargs; ++j) {\r\n\t    for(i=0; i<dimension; ++i) {\r\n\t      pidx = idx\r\n\t      idx = order[i]\r\n\t      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride\r\n\t        vars.push([\"d\",j,\"s\",i,\"=t\",j,\"p\",idx].join(\"\"))\r\n\t      } else { // For other dimensions the delta is basically the stride minus something which essentially \"rewinds\" the previous (more inner) dimension\r\n\t        vars.push([\"d\",j,\"s\",i,\"=(t\",j,\"p\",idx,\"-s\",pidx,\"*t\",j,\"p\",pidx,\")\"].join(\"\"))\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t  code.push(\"var \" + vars.join(\",\"))\r\n\t  //Scan loop\r\n\t  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards\r\n\t    idx = order[i]\r\n\t    code.push([\"for(i\",i,\"=0;i\",i,\"<s\",idx,\";++i\",i,\"){\"].join(\"\"))\r\n\t  }\r\n\t  //Push body of inner loop\r\n\t  code.push(body)\r\n\t  //Advance scan pointers\r\n\t  for(i=0; i<dimension; ++i) {\r\n\t    pidx = idx\r\n\t    idx = order[i]\r\n\t    for(j=0; j<nargs; ++j) {\r\n\t      code.push([\"p\",j,\"+=d\",j,\"s\",i].join(\"\"))\r\n\t    }\r\n\t    if(has_index) {\r\n\t      if(i > 0) {\r\n\t        code.push([\"index[\",pidx,\"]-=s\",pidx].join(\"\"))\r\n\t      }\r\n\t      code.push([\"++index[\",idx,\"]\"].join(\"\"))\r\n\t    }\r\n\t    code.push(\"}\")\r\n\t  }\r\n\t  return code.join(\"\\n\")\r\n\t}\r\n\t\r\n\t// Generate \"outer\" loops that loop over blocks of data, applying \"inner\" loops to the blocks by manipulating the local variables in such a way that the inner loop only \"sees\" the current block.\r\n\t// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.\r\n\t//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and \"shape\" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.\r\n\tfunction outerFill(matched, order, proc, body) {\r\n\t  var dimension = order.length\r\n\t    , nargs = proc.arrayArgs.length\r\n\t    , blockSize = proc.blockSize\r\n\t    , has_index = proc.indexArgs.length > 0\r\n\t    , code = []\r\n\t  for(var i=0; i<nargs; ++i) {\r\n\t    code.push([\"var offset\",i,\"=p\",i].join(\"\"))\r\n\t  }\r\n\t  //Generate loops for unmatched dimensions\r\n\t  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)\r\n\t  // TODO: It would be nice if the order in which these loops are placed would also be somehow \"optimal\" (at the very least we should check that it really doesn't hurt us if they're not).\r\n\t  for(var i=matched; i<dimension; ++i) {\r\n\t    code.push([\"for(var j\"+i+\"=SS[\", order[i], \"]|0;j\", i, \">0;){\"].join(\"\")) // Iterate back to front\r\n\t    code.push([\"if(j\",i,\"<\",blockSize,\"){\"].join(\"\")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).\r\n\t    code.push([\"s\",order[i],\"=j\",i].join(\"\"))\r\n\t    code.push([\"j\",i,\"=0\"].join(\"\"))\r\n\t    code.push([\"}else{s\",order[i],\"=\",blockSize].join(\"\"))\r\n\t    code.push([\"j\",i,\"-=\",blockSize,\"}\"].join(\"\"))\r\n\t    if(has_index) {\r\n\t      code.push([\"index[\",order[i],\"]=j\",i].join(\"\"))\r\n\t    }\r\n\t  }\r\n\t  for(var i=0; i<nargs; ++i) {\r\n\t    var indexStr = [\"offset\"+i]\r\n\t    for(var j=matched; j<dimension; ++j) {\r\n\t      indexStr.push([\"j\",j,\"*t\",i,\"p\",order[j]].join(\"\"))\r\n\t    }\r\n\t    code.push([\"p\",i,\"=(\",indexStr.join(\"+\"),\")\"].join(\"\"))\r\n\t  }\r\n\t  code.push(innerFill(order, proc, body))\r\n\t  for(var i=matched; i<dimension; ++i) {\r\n\t    code.push(\"}\")\r\n\t  }\r\n\t  return code.join(\"\\n\")\r\n\t}\r\n\t\r\n\t//Count the number of compatible inner orders\r\n\t// This is the length of the longest common prefix of the arrays in orders.\r\n\t// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.\r\n\t// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.\r\n\tfunction countMatches(orders) {\r\n\t  var matched = 0, dimension = orders[0].length\r\n\t  while(matched < dimension) {\r\n\t    for(var j=1; j<orders.length; ++j) {\r\n\t      if(orders[j][matched] !== orders[0][matched]) {\r\n\t        return matched\r\n\t      }\r\n\t    }\r\n\t    ++matched\r\n\t  }\r\n\t  return matched\r\n\t}\r\n\t\r\n\t//Processes a block according to the given data types\r\n\t// Replaces variable names by different ones, either \"local\" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.\r\n\tfunction processBlock(block, proc, dtypes) {\r\n\t  var code = block.body\r\n\t  var pre = []\r\n\t  var post = []\r\n\t  for(var i=0; i<block.args.length; ++i) {\r\n\t    var carg = block.args[i]\r\n\t    if(carg.count <= 0) {\r\n\t      continue\r\n\t    }\r\n\t    var re = new RegExp(carg.name, \"g\")\r\n\t    var ptrStr = \"\"\r\n\t    var arrNum = proc.arrayArgs.indexOf(i)\r\n\t    switch(proc.argTypes[i]) {\r\n\t      case \"offset\":\r\n\t        var offArgIndex = proc.offsetArgIndex.indexOf(i)\r\n\t        var offArg = proc.offsetArgs[offArgIndex]\r\n\t        arrNum = offArg.array\r\n\t        ptrStr = \"+q\" + offArgIndex // Adds offset to the \"pointer\" in the array\r\n\t      case \"array\":\r\n\t        ptrStr = \"p\" + arrNum + ptrStr\r\n\t        var localStr = \"l\" + i\r\n\t        var arrStr = \"a\" + arrNum\r\n\t        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array\r\n\t          if(carg.count === 1) { // Argument/array used only once(?)\r\n\t            if(dtypes[arrNum] === \"generic\") {\r\n\t              if(carg.lvalue) {\r\n\t                pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\r\n\t                code = code.replace(re, localStr)\r\n\t                post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\r\n\t              } else {\r\n\t                code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\r\n\t              }\r\n\t            } else {\r\n\t              code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\r\n\t            }\r\n\t          } else if(dtypes[arrNum] === \"generic\") {\r\n\t            pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\r\n\t            code = code.replace(re, localStr)\r\n\t            if(carg.lvalue) {\r\n\t              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\r\n\t            }\r\n\t          } else {\r\n\t            pre.push([\"var \", localStr, \"=\", arrStr, \"[\", ptrStr, \"]\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\r\n\t            code = code.replace(re, localStr)\r\n\t            if(carg.lvalue) {\r\n\t              post.push([arrStr, \"[\", ptrStr, \"]=\", localStr].join(\"\"))\r\n\t            }\r\n\t          }\r\n\t        } else { // Argument to body is a \"block\"\r\n\t          var reStrArr = [carg.name], ptrStrArr = [ptrStr]\r\n\t          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {\r\n\t            reStrArr.push(\"\\\\s*\\\\[([^\\\\]]+)\\\\]\")\r\n\t            ptrStrArr.push(\"$\" + (j+1) + \"*t\" + arrNum + \"b\" + j) // Matched index times stride\r\n\t          }\r\n\t          re = new RegExp(reStrArr.join(\"\"), \"g\")\r\n\t          ptrStr = ptrStrArr.join(\"+\")\r\n\t          if(dtypes[arrNum] === \"generic\") {\r\n\t            /*if(carg.lvalue) {\r\n\t              pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\r\n\t              code = code.replace(re, localStr)\r\n\t              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\r\n\t            } else {\r\n\t              code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\r\n\t            }*/\r\n\t            throw new Error(\"cwise: Generic arrays not supported in combination with blocks!\")\r\n\t          } else {\r\n\t            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.\r\n\t            code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\r\n\t          }\r\n\t        }\r\n\t      break\r\n\t      case \"scalar\":\r\n\t        code = code.replace(re, \"Y\" + proc.scalarArgs.indexOf(i))\r\n\t      break\r\n\t      case \"index\":\r\n\t        code = code.replace(re, \"index\")\r\n\t      break\r\n\t      case \"shape\":\r\n\t        code = code.replace(re, \"shape\")\r\n\t      break\r\n\t    }\r\n\t  }\r\n\t  return [pre.join(\"\\n\"), code, post.join(\"\\n\")].join(\"\\n\").trim()\r\n\t}\r\n\t\r\n\tfunction typeSummary(dtypes) {\r\n\t  var summary = new Array(dtypes.length)\r\n\t  var allEqual = true\r\n\t  for(var i=0; i<dtypes.length; ++i) {\r\n\t    var t = dtypes[i]\r\n\t    var digits = t.match(/\\d+/)\r\n\t    if(!digits) {\r\n\t      digits = \"\"\r\n\t    } else {\r\n\t      digits = digits[0]\r\n\t    }\r\n\t    if(t.charAt(0) === 0) {\r\n\t      summary[i] = \"u\" + t.charAt(1) + digits\r\n\t    } else {\r\n\t      summary[i] = t.charAt(0) + digits\r\n\t    }\r\n\t    if(i > 0) {\r\n\t      allEqual = allEqual && summary[i] === summary[i-1]\r\n\t    }\r\n\t  }\r\n\t  if(allEqual) {\r\n\t    return summary[0]\r\n\t  }\r\n\t  return summary.join(\"\")\r\n\t}\r\n\t\r\n\t//Generates a cwise operator\r\n\tfunction generateCWiseOp(proc, typesig) {\r\n\t\r\n\t  //Compute dimension\r\n\t  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.\r\n\t  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0\r\n\t  var orders = new Array(proc.arrayArgs.length)\r\n\t  var dtypes = new Array(proc.arrayArgs.length)\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    dtypes[i] = typesig[2*i]\r\n\t    orders[i] = typesig[2*i+1]\r\n\t  }\r\n\t  \r\n\t  //Determine where block and loop indices start and end\r\n\t  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks\r\n\t  var loopBegin = [], loopEnd = [] // These indices are iterated over\r\n\t  var loopOrders = [] // orders restricted to the loop indices\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    if (proc.arrayBlockIndices[i]<0) {\r\n\t      loopBegin.push(0)\r\n\t      loopEnd.push(dimension)\r\n\t      blockBegin.push(dimension)\r\n\t      blockEnd.push(dimension+proc.arrayBlockIndices[i])\r\n\t    } else {\r\n\t      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative\r\n\t      loopEnd.push(proc.arrayBlockIndices[i]+dimension)\r\n\t      blockBegin.push(0)\r\n\t      blockEnd.push(proc.arrayBlockIndices[i])\r\n\t    }\r\n\t    var newOrder = []\r\n\t    for(var j=0; j<orders[i].length; j++) {\r\n\t      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {\r\n\t        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.\r\n\t      }\r\n\t    }\r\n\t    loopOrders.push(newOrder)\r\n\t  }\r\n\t\r\n\t  //First create arguments for procedure\r\n\t  var arglist = [\"SS\"] // SS is the overall shape over which we iterate\r\n\t  var code = [\"'use strict'\"]\r\n\t  var vars = []\r\n\t  \r\n\t  for(var j=0; j<dimension; ++j) {\r\n\t    vars.push([\"s\", j, \"=SS[\", j, \"]\"].join(\"\")) // The limits for each dimension.\r\n\t  }\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    arglist.push(\"a\"+i) // Actual data array\r\n\t    arglist.push(\"t\"+i) // Strides\r\n\t    arglist.push(\"p\"+i) // Offset in the array at which the data starts (also used for iterating over the data)\r\n\t    \r\n\t    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping\r\n\t      vars.push([\"t\",i,\"p\",j,\"=t\",i,\"[\",loopBegin[i]+j,\"]\"].join(\"\"))\r\n\t    }\r\n\t    \r\n\t    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration\r\n\t      vars.push([\"t\",i,\"b\",j,\"=t\",i,\"[\",blockBegin[i]+j,\"]\"].join(\"\"))\r\n\t    }\r\n\t  }\r\n\t  for(var i=0; i<proc.scalarArgs.length; ++i) {\r\n\t    arglist.push(\"Y\" + i)\r\n\t  }\r\n\t  if(proc.shapeArgs.length > 0) {\r\n\t    vars.push(\"shape=SS.slice(0)\") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)\r\n\t  }\r\n\t  if(proc.indexArgs.length > 0) {\r\n\t    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.\r\n\t    var zeros = new Array(dimension)\r\n\t    for(var i=0; i<dimension; ++i) {\r\n\t      zeros[i] = \"0\"\r\n\t    }\r\n\t    vars.push([\"index=[\", zeros.join(\",\"), \"]\"].join(\"\"))\r\n\t  }\r\n\t  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations\r\n\t    var off_arg = proc.offsetArgs[i]\r\n\t    var init_string = []\r\n\t    for(var j=0; j<off_arg.offset.length; ++j) {\r\n\t      if(off_arg.offset[j] === 0) {\r\n\t        continue\r\n\t      } else if(off_arg.offset[j] === 1) {\r\n\t        init_string.push([\"t\", off_arg.array, \"p\", j].join(\"\"))      \r\n\t      } else {\r\n\t        init_string.push([off_arg.offset[j], \"*t\", off_arg.array, \"p\", j].join(\"\"))\r\n\t      }\r\n\t    }\r\n\t    if(init_string.length === 0) {\r\n\t      vars.push(\"q\" + i + \"=0\")\r\n\t    } else {\r\n\t      vars.push([\"q\", i, \"=\", init_string.join(\"+\")].join(\"\"))\r\n\t    }\r\n\t  }\r\n\t\r\n\t  //Prepare this variables\r\n\t  var thisVars = uniq([].concat(proc.pre.thisVars)\r\n\t                      .concat(proc.body.thisVars)\r\n\t                      .concat(proc.post.thisVars))\r\n\t  vars = vars.concat(thisVars)\r\n\t  code.push(\"var \" + vars.join(\",\"))\r\n\t  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n\t    code.push(\"p\"+i+\"|=0\")\r\n\t  }\r\n\t  \r\n\t  //Inline prelude\r\n\t  if(proc.pre.body.length > 3) {\r\n\t    code.push(processBlock(proc.pre, proc, dtypes))\r\n\t  }\r\n\t\r\n\t  //Process body\r\n\t  var body = processBlock(proc.body, proc, dtypes)\r\n\t  var matched = countMatches(loopOrders)\r\n\t  if(matched < dimension) {\r\n\t    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.\r\n\t  } else {\r\n\t    code.push(innerFill(loopOrders[0], proc, body))\r\n\t  }\r\n\t\r\n\t  //Inline epilog\r\n\t  if(proc.post.body.length > 3) {\r\n\t    code.push(processBlock(proc.post, proc, dtypes))\r\n\t  }\r\n\t  \r\n\t  if(proc.debug) {\r\n\t    console.log(\"-----Generated cwise routine for \", typesig, \":\\n\" + code.join(\"\\n\") + \"\\n----------\")\r\n\t  }\r\n\t  \r\n\t  var loopName = [(proc.funcName||\"unnamed\"), \"_cwise_loop_\", orders[0].join(\"s\"),\"m\",matched,typeSummary(dtypes)].join(\"\")\r\n\t  var f = new Function([\"function \",loopName,\"(\", arglist.join(\",\"),\"){\", code.join(\"\\n\"),\"} return \", loopName].join(\"\"))\r\n\t  return f()\r\n\t}\r\n\tmodule.exports = generateCWiseOp\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\"\n\t\n\tfunction unique_pred(list, compare) {\n\t  var ptr = 1\n\t    , len = list.length\n\t    , a=list[0], b=list[0]\n\t  for(var i=1; i<len; ++i) {\n\t    b = a\n\t    a = list[i]\n\t    if(compare(a, b)) {\n\t      if(i === ptr) {\n\t        ptr++\n\t        continue\n\t      }\n\t      list[ptr++] = a\n\t    }\n\t  }\n\t  list.length = ptr\n\t  return list\n\t}\n\t\n\tfunction unique_eq(list) {\n\t  var ptr = 1\n\t    , len = list.length\n\t    , a=list[0], b = list[0]\n\t  for(var i=1; i<len; ++i, b=a) {\n\t    b = a\n\t    a = list[i]\n\t    if(a !== b) {\n\t      if(i === ptr) {\n\t        ptr++\n\t        continue\n\t      }\n\t      list[ptr++] = a\n\t    }\n\t  }\n\t  list.length = ptr\n\t  return list\n\t}\n\t\n\tfunction unique(list, compare, sorted) {\n\t  if(list.length === 0) {\n\t    return list\n\t  }\n\t  if(compare) {\n\t    if(!sorted) {\n\t      list.sort(compare)\n\t    }\n\t    return unique_pred(list, compare)\n\t  }\n\t  if(!sorted) {\n\t    list.sort()\n\t  }\n\t  return unique_eq(list)\n\t}\n\t\n\tmodule.exports = unique\n\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=ndarray-chunk.js.map"],"sourceRoot":"/source/"}